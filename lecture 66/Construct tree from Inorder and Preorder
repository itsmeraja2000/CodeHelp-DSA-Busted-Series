class Solution{
    public:
    int find(int in[], int element, int inOrdStart, int inOrdEnd){        
        for(int i=inOrdStart; i<=inOrdEnd; i++){
            if(in[i] == element)
                return i;
        }
        return -1;
    }
    
    Node* solve(int in[],int pre[], int &index, int inOrdStart, int inOrdEnd, int n){
        
        if(index >= n || inOrdStart > inOrdEnd){
            return NULL;
        }
        int element = pre[index++];
        Node* root = new Node(element);
        int position = find(in,element, inOrdStart,inOrdEnd);
        
        root->left = solve(in,pre,index,inOrdStart, position-1,n);
        root->right = solve(in,pre,index, position+1, inOrdEnd,n);
        
        return root;
    }
    
    Node* buildTree(int in[],int pre[], int n)
    {
        // Code here
        int preOrderIndex =0;
        Node* ans = solve(in, pre, preOrderIndex, 0 ,n-1,n);
        return ans;
    }
};
